"""
FinanTidy - Simple Login Window
Giao di·ªán ƒëƒÉng nh·∫≠p ƒë∆°n gi·∫£n, r√µ r√†ng v·ªõi textbox c√≥ th·ªÉ nh√¨n th·∫•y
"""

from PySide6.QtWidgets import (
    QApplication, QDialog, QVBoxLayout, QFormLayout, QHBoxLayout,
    QLineEdit, QPushButton, QLabel, QCheckBox, QMessageBox, QFrame,
    QSpacerItem, QSizePolicy
)
from PySide6.QtCore import Signal, Qt, QSize
from PySide6.QtGui import QFont, QIcon, QPalette, QPixmap

from database.manager import DatabaseManager


class SimpleLoginWindow(QDialog):
    """Giao di·ªán ƒëƒÉng nh·∫≠p ƒë∆°n gi·∫£n v·ªõi textbox r√µ r√†ng"""
    
    user_authenticated = Signal(dict)
    
    def __init__(self, db_manager: DatabaseManager):
        super().__init__()
        self.db_manager = db_manager
        self.setup_ui()
        self.setup_styling()
    
    def setup_ui(self):
        """Thi·∫øt l·∫≠p giao di·ªán ng∆∞·ªùi d√πng"""
        # C·∫•u h√¨nh c·ª≠a s·ªï
        self.setWindowTitle("FinanTidy - ƒêƒÉng nh·∫≠p")
        self.setFixedSize(420, 480)
        self.setModal(True)
        self.setWindowFlags(self.windowFlags() & ~Qt.WindowContextHelpButtonHint)
        
        # Layout ch√≠nh
        self.main_layout = QVBoxLayout(self)
        self.main_layout.setContentsMargins(30, 30, 30, 30)
        self.main_layout.setSpacing(25)
        
        # T·∫°o c√°c ph·∫ßn giao di·ªán
        self.create_header()
        self.create_login_form()
        self.create_buttons()
        
    def create_header(self):
        """T·∫°o ph·∫ßn header v·ªõi logo v√† ti√™u ƒë·ªÅ"""
        header_layout = QVBoxLayout()
        header_layout.setSpacing(8)
        
        # Logo
        self.logo_label = QLabel("üíº")
        self.logo_label.setAlignment(Qt.AlignCenter)
        self.logo_label.setObjectName("logo")
        
        # Ti√™u ƒë·ªÅ ·ª©ng d·ª•ng
        self.title_label = QLabel("FinanTidy")
        self.title_label.setAlignment(Qt.AlignCenter)
        self.title_label.setObjectName("title")
        
        # M√¥ t·∫£
        self.subtitle_label = QLabel("Qu·∫£n l√Ω t√†i ch√≠nh th√¥ng minh")
        self.subtitle_label.setAlignment(Qt.AlignCenter)
        self.subtitle_label.setObjectName("subtitle")
        
        header_layout.addWidget(self.logo_label)
        header_layout.addWidget(self.title_label)
        header_layout.addWidget(self.subtitle_label)
        
        self.main_layout.addLayout(header_layout)
    
    def create_login_form(self):
        """T·∫°o form ƒëƒÉng nh·∫≠p ƒë∆°n gi·∫£n v√† r√µ r√†ng"""
        # Container cho form
        form_frame = QFrame()
        form_frame.setObjectName("formFrame")
        
        form_layout = QVBoxLayout(form_frame)
        form_layout.setContentsMargins(25, 25, 25, 25)
        form_layout.setSpacing(18)
        
        # Ti√™u ƒë·ªÅ form
        form_title = QLabel("ƒêƒÉng nh·∫≠p")
        form_title.setAlignment(Qt.AlignCenter)
        form_title.setObjectName("formTitle")
        form_layout.addWidget(form_title)
        
        # Tr∆∞·ªùng t√™n ƒëƒÉng nh·∫≠p
        username_label = QLabel("T√™n ƒëƒÉng nh·∫≠p:")
        username_label.setObjectName("fieldLabel")
        self.username_input = QLineEdit()
        self.username_input.setObjectName("textInput")
        self.username_input.setText("demo")
        self.username_input.setPlaceholderText("Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p c·ªßa b·∫°n")
        self.username_input.setMinimumHeight(42)
        
        # Tr∆∞·ªùng m·∫≠t kh·∫©u
        password_label = QLabel("M·∫≠t kh·∫©u:")
        password_label.setObjectName("fieldLabel")
        self.password_input = QLineEdit()
        self.password_input.setObjectName("textInput")
        self.password_input.setText("demo")
        self.password_input.setPlaceholderText("Nh·∫≠p m·∫≠t kh·∫©u c·ªßa b·∫°n")
        self.password_input.setEchoMode(QLineEdit.Password)
        self.password_input.setMinimumHeight(42)
        
        # Checkbox hi·ªÉn th·ªã m·∫≠t kh·∫©u
        self.show_password_checkbox = QCheckBox("Hi·ªÉn th·ªã m·∫≠t kh·∫©u")
        self.show_password_checkbox.setObjectName("checkbox")
        self.show_password_checkbox.toggled.connect(self.toggle_password_visibility)
        
        # Th√™m v√†o layout
        form_layout.addWidget(username_label)
        form_layout.addWidget(self.username_input)
        form_layout.addSpacing(5)
        form_layout.addWidget(password_label)
        form_layout.addWidget(self.password_input)
        form_layout.addSpacing(5)
        form_layout.addWidget(self.show_password_checkbox)
        
        self.main_layout.addWidget(form_frame)
    
    def create_buttons(self):
        """T·∫°o c√°c n√∫t h√†nh ƒë·ªông"""
        button_layout = QVBoxLayout()
        button_layout.setSpacing(12)
        
        # N√∫t ƒëƒÉng nh·∫≠p
        self.login_button = QPushButton("ƒêƒÉng nh·∫≠p")
        self.login_button.setObjectName("loginButton")
        self.login_button.setMinimumHeight(45)
        self.login_button.setCursor(Qt.PointingHandCursor)
        self.login_button.clicked.connect(self.login)
        
        # N√∫t ƒëƒÉng k√Ω
        register_button = QPushButton("ƒêƒÉng k√Ω t√†i kho·∫£n m·ªõi")
        register_button.setObjectName("registerButton")
        register_button.setMinimumHeight(40)
        register_button.setCursor(Qt.PointingHandCursor)
        register_button.clicked.connect(self.show_register_dialog)
        
        button_layout.addWidget(self.login_button)
        button_layout.addWidget(register_button)
        
        # Th√™m spacer ƒë·ªÉ ƒë·∫©y n√∫t xu·ªëng d∆∞·ªõi
        self.main_layout.addItem(QSpacerItem(20, 20, QSizePolicy.Minimum, QSizePolicy.Expanding))
        self.main_layout.addLayout(button_layout)
        
        # K·∫øt n·ªëi ph√≠m Enter
        self.username_input.returnPressed.connect(self.login)
        self.password_input.returnPressed.connect(self.login)
    
    def setup_styling(self):
        """Thi·∫øt l·∫≠p style ƒë∆°n gi·∫£n v√† r√µ r√†ng"""
        self.setStyleSheet("""
            /* N·ªÅn ch√≠nh c·ªßa dialog */
            QDialog {
                background-color: #f8fafc;
                font-family: 'Segoe UI', Arial, sans-serif;
            }
            
            /* Logo */
            QLabel#logo {
                font-size: 36px;
                color: #2563eb;
                padding: 8px;
            }
            
            /* Ti√™u ƒë·ªÅ ch√≠nh */
            QLabel#title {
                font-size: 26px;
                font-weight: bold;
                color: #1e293b;
                padding: 4px;
            }
            
            /* M√¥ t·∫£ */
            QLabel#subtitle {
                font-size: 14px;
                color: #64748b;
                padding: 4px;
            }
            
            /* Khung form */
            QFrame#formFrame {
                background-color: white;
                border: 2px solid #e2e8f0;
                border-radius: 12px;
                margin: 5px 0;
            }
            
            /* Ti√™u ƒë·ªÅ form */
            QLabel#formTitle {
                font-size: 16px;
                font-weight: 600;
                color: #374151;
                padding: 8px;
                background-color: #f1f5f9;
                border-radius: 6px;
                margin-bottom: 8px;
            }
            
            /* Nh√£n tr∆∞·ªùng */
            QLabel#fieldLabel {
                font-size: 14px;
                font-weight: 500;
                color: #374151;
                padding: 0 2px 3px 2px;
            }
            
            /* √î nh·∫≠p li·ªáu - QUAN TR·ªåNG: M√†u n·ªÅn tr·∫Øng, vi·ªÅn r√µ r√†ng */
            QLineEdit#textInput {
                font-size: 14px;
                padding: 12px 16px;
                border: 2px solid #cbd5e1;
                border-radius: 8px;
                background-color: #ffffff;  /* N·ªÅn tr·∫Øng r√µ r√†ng */
                color: #1f2937;            /* Ch·ªØ ƒëen r√µ r√†ng */
                selection-background-color: #3b82f6;
                selection-color: white;
            }
            
            QLineEdit#textInput:focus {
                border-color: #3b82f6;
                background-color: #ffffff;  /* Gi·ªØ n·ªÅn tr·∫Øng khi focus */
                outline: none;
            }
            
            QLineEdit#textInput:hover {
                border-color: #94a3b8;
                background-color: #ffffff;  /* Gi·ªØ n·ªÅn tr·∫Øng khi hover */
            }
            
            /* Placeholder text r√µ r√†ng */
            QLineEdit#textInput::placeholder {
                color: #94a3b8;
                font-style: italic;
                font-weight: normal;
            }
            
            /* Checkbox */
            QCheckBox#checkbox {
                font-size: 13px;
                color: #6b7280;
                padding: 3px 0;
                spacing: 6px;
            }
            
            QCheckBox#checkbox::indicator {
                width: 16px;
                height: 16px;
                border: 2px solid #cbd5e1;
                border-radius: 3px;
                background-color: white;
            }
            
            QCheckBox#checkbox::indicator:checked {
                background-color: #3b82f6;
                border-color: #3b82f6;
            }
            
            QCheckBox#checkbox::indicator:hover {
                border-color: #94a3b8;
            }
            
            /* N√∫t ƒëƒÉng nh·∫≠p ch√≠nh */
            QPushButton#loginButton {
                background-color: #3b82f6;
                color: white;
                font-size: 15px;
                font-weight: 600;
                border: none;
                border-radius: 8px;
                padding: 13px 20px;
            }
            
            QPushButton#loginButton:hover {
                background-color: #2563eb;
            }
            
            QPushButton#loginButton:pressed {
                background-color: #1d4ed8;
            }
            
            /* N√∫t ƒëƒÉng k√Ω ph·ª• */
            QPushButton#registerButton {
                background-color: transparent;
                color: #6b7280;
                font-size: 13px;
                font-weight: 500;
                border: 2px solid #d1d5db;
                border-radius: 8px;
                padding: 10px 20px;
            }
            
            QPushButton#registerButton:hover {
                background-color: #f9fafb;
                color: #374151;
                border-color: #9ca3af;
            }
            
            QPushButton#registerButton:pressed {
                background-color: #f3f4f6;
            }
        """)
    
    def toggle_password_visibility(self, checked):
        """Chuy·ªÉn ƒë·ªïi hi·ªÉn th·ªã m·∫≠t kh·∫©u"""
        if checked:
            self.password_input.setEchoMode(QLineEdit.Normal)
        else:
            self.password_input.setEchoMode(QLineEdit.Password)
    
    def login(self):
        """X·ª≠ l√Ω ƒëƒÉng nh·∫≠p"""
        username = self.username_input.text().strip()
        password = self.password_input.text()
        
        # Ki·ªÉm tra input
        if not username or not password:
            QMessageBox.warning(self, "L·ªói", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin ƒëƒÉng nh·∫≠p.")
            return
        
        # Th·ª≠ ƒëƒÉng nh·∫≠p
        try:
            user_data = self.db_manager.authenticate_user(username, password)
            
            if user_data:
                QMessageBox.information(self, "Th√†nh c√¥ng", f"Ch√†o m·ª´ng {user_data.get('username', username)}!")
                self.user_authenticated.emit(user_data)
                self.accept()
            else:
                # Demo mode - cho ph√©p ƒëƒÉng nh·∫≠p v·ªõi b·∫•t k·ª≥ th√¥ng tin n√†o
                demo_user = {
                    'id': 1,
                    'username': username,
                    'role': 'user',
                    'company_id': 1
                }
                QMessageBox.information(self, "Demo Mode", f"ƒêƒÉng nh·∫≠p th√†nh c√¥ng (Demo)\nCh√†o m·ª´ng {username}!")
                self.user_authenticated.emit(demo_user)
                self.accept()
        except Exception as e:
            QMessageBox.critical(self, "L·ªói", f"L·ªói k·∫øt n·ªëi: {str(e)}")
    
    def show_register_dialog(self):
        """Hi·ªÉn th·ªã dialog ƒëƒÉng k√Ω"""
        QMessageBox.information(self, "ƒêƒÉng k√Ω", "T√≠nh nƒÉng ƒëƒÉng k√Ω s·∫Ω ƒë∆∞·ª£c ph√°t tri·ªÉn trong phi√™n b·∫£n ti·∫øp theo.")
